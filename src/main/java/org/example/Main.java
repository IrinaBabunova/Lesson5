package org.example;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {

        /** ### Вводные данные для базовых задач
         Представим, что вы работаете в небольшой компании, и к вам часто обращаются коллеги из других отделов, чтобы вы
         помогли им настроить их работу.
         И вот к вам приходят коллеги из бухгалтерии и просят помощи с  корпоративной бухгалтерской книгой.
         Каждый день месяца, включая выходные, компания тратит средства – некую сумму, причем в бухгалтерской книге
         хранится сумма затрат по дням (а не каждая сумма отдельно). То есть в книге 30 записей разных сумм. Эти суммы
         разнятся от 100 000 до 200 000.
         Ваш коллега по отделу написал код, который генерирует массив из 30 случайных чисел, и предложил прежде чем писать
         программу для настоящей бухгалтерской книги, проверить всё на случайных числах от 100 000 до 200 000.
         Для получения массива случайных чисел достаточно объявить массив и вызвать указанный ранее метод. Метод
         инициализирует ваш массив и заполнит его случайными значениями от 100_000 до 200_000.*/

        System.out.println("Задание 1");
        /** Первым дело бухгалтеры попросили посчитать сумму всех выплат за месяц.
         Нужно написать программу, которая решит эту задачу, и вывести в консоль результат
         в формате :”Сумма трат за месяц составила … рублей.”*/

        int[] arr = {100001, 120000, 125000, 110000, 145000, 199999, 178000, 179000, 189000, 156000,
                     154000, 186000, 197000, 154000, 139000, 174000, 138000, 193000, 128700, 183000,
                     173000, 195800, 133000, 178900, 198700, 136800, 181000, 171000, 130000, 146000};
        int sum=0;
        for (int i = 0; i < arr.length; i++){
            sum=sum+arr[i];
        }
        System.out.println("Сумма трат за месяц составила " + sum + " рублей.");

        System.out.println("Задание 2");
        /** Следующая задача – найти минимальную и максимальную трату за месяц.
         Нужно написать программу, которая решит эту задачу, и вывести в консоль результат
         в формате :”Минимальная сумма трат за месяц составила … рублей. Максимальная сумма трат за меся составила … рублей.”*/

        int max=100000;
        int min=200000;
        for (int i = 0; i < arr.length; i++){
            if (arr[i] > max) {
                max=arr[i];
            }
            if (arr[i] < min) {
                min=arr[i];
            }
            }
        System.out.println("Минимальная сумма трат за месяц составила " + min + " рублей. Максимальная сумма трат за месяц составила " + max + " рублей.");

        System.out.println("Задание 3");
        /** А теперь нам нужно понять, какую в среднем сумму наша компания тратила в течение данных 30 дней.
         Нужно написать программу, которая посчитает среднее значение трат за месяц (то есть сумму всех трат за месяц поделить
         на количество дней), и вывести в консоль результат в формате :”Средняя сумма трат за месяц составила … рублей.”
         **Важно помнить:** подсчет среднего значения может иметь остаток (то есть быть не целым, а дробным числом).*/

        float averageSum=0f;
        int totalAmount=0;
        for (int i =0; i < arr.length; i++){
            totalAmount=totalAmount+arr[i];
       }
       averageSum=totalAmount/ arr.length;
       System.out.println("Средняя сумма трат за месяц составила " + averageSum + " рублей.");


        System.out.println("Задание 4");
        /** Отойдем от подсчетов.
         В нашей бухгалтерской книге появился баг. Что-то пошло нет так, и ФИО сотрудников начали отображаться в обратную сторону.
         Т.е. вместо Иванов Иван Иванович мы имеем чивонавИ навИ вонавИ.
         Данные с именами сотрудников хранятся в виде массива символов (char[]).
         Напишите код, который в случае такого бага будет выводить ФИО сотрудников в корректном виде. В качестве данных для массива
         используйте
         char[] reverseFullName = { 'n', 'a', 'v', 'I', ' ', 'v', 'o', 'n', 'a', 'v', 'I'};
         В результате в консоль должно быть выведено "Ivanov Ivan".
         **Важно**: не используйте дополнительные массивы для решения этой задачи. Необходимо корректно пройти по массиву циклом и
         * распечатать его элементы в правильном порядке.*/

        char[] reverseFullName = {'h','c','i','v','o','n','a','v','I',' ','n', 'a', 'v', 'I', ' ', 'v', 'o', 'n', 'a', 'v', 'I'};
        for (int i= reverseFullName.length-1; i >= 0; i--) {
            System.out.print(reverseFullName[i]);
        } System.out.println();

        System.out.println("Повышенная сложность. Задание 5");
        /** Создайте матрицу 3х3 (двумерный массив типа int). Заполните единицами обе диагонали матрицы и напечатайте её в
        консоль. Постарайтесь заполнить обе диагонали в одном цикле.        */

        int[][] theMatrix = new int[3][3];
        int number=1;

        for (int i = 0; i < theMatrix.length; i++) {
            for (int j = 0; j < theMatrix[0].length; j++) {
                if ((i==j)||(i==0 && j == theMatrix.length-1)||(i==theMatrix.length-1 && j == 0)){
                    theMatrix[j][i]=number;
                }
            }
        }

        for (int[] row : theMatrix) {
            for (int column : row) {
                System.out.print(column + " ");
            }
            System.out.println();
        }

        System.out.println("Повышенная сложность. Задание 6");
        /** У нас есть массив, в котором содержатся целочисленные значения от 1 до 5.
         Наш коллега что-то напутал, в итоге массив читается не с начала, а с конца.
         Нам нужно исправить ошибку и переработать код так, чтобы массив читался в правильном порядке.
         Нам дан массив чисел {5, 4, 3, 2, 1}
         Необходимо привести его к виду {1, 2, 3, 4, 5}
         Решите задачу с использованием дополнительного массива.
         Напечатать массив до преобразования и после с помощью
         Уточнение:
         Это задание не на сортировку.
         Не использовать Arrays.sort() и другие способы сортировок.
         Числа в порядке убывания даны исключительно для указания направления чтения.
         Массив может быть 5 8 2 3 9, нужно из него сделать 9 3 2 8 5. */

        int arr1[]={5, 4, 3, 2, 1};
        int arr2[] = new int[5];
        int j=1;
        for (int i=0; i<arr1.length; i++) {
              System.out.print(arr1[i] + " ");
            }
        System.out.println();
        for (int i=0; i<arr1.length; i++){
            arr2[i]=arr1[arr1.length - j];
            j=j+1;
            System.out.print(arr2[i] + " ");
            }
        System.out.println();

        System.out.println("Повышенная сложность. Задание 7");
        /** Решите предыдущее задание, но без использования дополнительного массива.
         Необходимо добиться того, чтобы исходный массив полностью соответствовал второму массиву из прошлого задания.
         Выведите результат программы в консоль тем же способом.
         Уточнение:
         Это задание не на сортировку.
         Не использовать Arrays.sort() и другие способы сортировок.
         Числа в порядке убывания даны исключительно для указания направления чтения.
         Массив может быть 5 8 2 3 9, нужно из него сделать 9 3 2 8 5. */

        int arr3[]={5, 8, 2, 3, 9};

        for (int index = 0; index < arr3.length; index++) {
            if (index == arr3.length - 1) {
                System.out.println(arr3[index]);
                break;
            }
            System.out.print(arr3[index] + " ");
        }
        int elem=arr3.length-1;
        for (int index=0; index < arr3.length; index ++){
            if (index<elem){
                int tmp=arr3[index];
                arr3[index]=arr3[elem];
                arr3[elem]=tmp;
                elem=elem-1;}
            else break;
        }

        for (int index = 0; index < arr3.length; index++) {
            if (index == arr3.length - 1) {
                System.out.println(arr3[index]);
                break;
            }
            System.out.print(arr3[index] + " ");
        }

        System.out.println("Очень сложно. Задание 8");
        /** Дан массив чисел  {-6, 2, 5, -8, 8, 10, 4, -7, 12, 1}
         Необходимо найти два числа, сумма которых равна -2.
         Напечатать эти числа в консоль.*/

        int arrNew8[] = {-6, 2, 5, -8, 8, 10, 4, -7, 12, 1};
        Arrays.sort(arrNew8);
        System.out.println(Arrays.toString(arrNew8));
        int ind1=0;
        int ind2=arrNew8.length-1;
        while (ind1<ind2) {
            if (arrNew8[ind1] + arrNew8[ind2] > -2) {
                ind2 = ind2 - 1;

            } else if (arrNew8[ind1] + arrNew8[ind2] < -2) {
                ind1 = ind1 + 1;

            } else
                {
                System.out.println("Сумму числе " + arrNew8[ind1] + " и " + arrNew8[ind2] + " равна -2");
                break;
            }
        }



        System.out.println("Очень сложно. Задание 9");
        /** Задача из собеседования.
         Дан массив чисел  {-6, 2, 5, -8, 8, 10, 4, -7, 12, 1}
         Найдите все пары чисел, сумма которых равна -2.
         Напечатать эти числа в консоль.*/

        int arrNew[]={-6, 2, 5, -8, 8, 10, 4, -7, 12, 1};
        int num=-2;
        for (int i=0; i < arrNew.length; i++){
            for (int t=i+1; t < arrNew.length; t++) {
                if (arrNew[i] + arrNew[t] == num) {
                    System.out.println("Сумму числе " + arrNew[i] + " и " + arrNew[t] + " равна " + num);
                }
            }
        }


    }

}
